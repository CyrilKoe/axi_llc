// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package axi_llc_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 8;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_spm_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_spm_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_set0_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_set0_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_set1_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_flush_set1_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition0_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition0_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition1_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition1_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition2_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition2_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition3_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition3_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition4_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition4_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition5_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition5_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition6_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition6_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition7_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition7_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition8_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition8_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition9_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition9_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition10_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition10_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition11_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition11_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition12_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition12_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition13_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition13_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition14_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_cfg_set_partition14_high_reg_t;

  typedef struct packed {
    logic        q;
  } axi_llc_reg2hw_commit_cfg_reg_t;

  typedef struct packed {
    logic        q;
  } axi_llc_reg2hw_commit_partition_cfg_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_set0_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_set0_high_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_set1_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_llc_reg2hw_flushed_set1_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_spm_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_spm_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_set0_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_set0_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_set1_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_flush_set1_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition0_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition0_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition1_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition1_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition2_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition2_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition3_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition3_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition4_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition4_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition5_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition5_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition6_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition6_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition7_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition7_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition8_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition8_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition9_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition9_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition10_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition10_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition11_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition11_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition12_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition12_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition13_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition13_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition14_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_cfg_set_partition14_high_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } axi_llc_hw2reg_commit_cfg_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } axi_llc_hw2reg_commit_partition_cfg_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_bist_out_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_bist_out_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_set_asso_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_set_asso_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_num_lines_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_num_lines_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_num_blocks_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_num_blocks_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_version_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_version_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_set0_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_set0_high_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_set1_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } axi_llc_hw2reg_flushed_set1_high_reg_t;

  // Register -> HW type
  typedef struct packed {
    axi_llc_reg2hw_cfg_spm_low_reg_t cfg_spm_low; // [1409:1378]
    axi_llc_reg2hw_cfg_spm_high_reg_t cfg_spm_high; // [1377:1346]
    axi_llc_reg2hw_cfg_flush_low_reg_t cfg_flush_low; // [1345:1314]
    axi_llc_reg2hw_cfg_flush_high_reg_t cfg_flush_high; // [1313:1282]
    axi_llc_reg2hw_cfg_flush_set0_low_reg_t cfg_flush_set0_low; // [1281:1250]
    axi_llc_reg2hw_cfg_flush_set0_high_reg_t cfg_flush_set0_high; // [1249:1218]
    axi_llc_reg2hw_cfg_flush_set1_low_reg_t cfg_flush_set1_low; // [1217:1186]
    axi_llc_reg2hw_cfg_flush_set1_high_reg_t cfg_flush_set1_high; // [1185:1154]
    axi_llc_reg2hw_cfg_set_partition0_low_reg_t cfg_set_partition0_low; // [1153:1122]
    axi_llc_reg2hw_cfg_set_partition0_high_reg_t cfg_set_partition0_high; // [1121:1090]
    axi_llc_reg2hw_cfg_set_partition1_low_reg_t cfg_set_partition1_low; // [1089:1058]
    axi_llc_reg2hw_cfg_set_partition1_high_reg_t cfg_set_partition1_high; // [1057:1026]
    axi_llc_reg2hw_cfg_set_partition2_low_reg_t cfg_set_partition2_low; // [1025:994]
    axi_llc_reg2hw_cfg_set_partition2_high_reg_t cfg_set_partition2_high; // [993:962]
    axi_llc_reg2hw_cfg_set_partition3_low_reg_t cfg_set_partition3_low; // [961:930]
    axi_llc_reg2hw_cfg_set_partition3_high_reg_t cfg_set_partition3_high; // [929:898]
    axi_llc_reg2hw_cfg_set_partition4_low_reg_t cfg_set_partition4_low; // [897:866]
    axi_llc_reg2hw_cfg_set_partition4_high_reg_t cfg_set_partition4_high; // [865:834]
    axi_llc_reg2hw_cfg_set_partition5_low_reg_t cfg_set_partition5_low; // [833:802]
    axi_llc_reg2hw_cfg_set_partition5_high_reg_t cfg_set_partition5_high; // [801:770]
    axi_llc_reg2hw_cfg_set_partition6_low_reg_t cfg_set_partition6_low; // [769:738]
    axi_llc_reg2hw_cfg_set_partition6_high_reg_t cfg_set_partition6_high; // [737:706]
    axi_llc_reg2hw_cfg_set_partition7_low_reg_t cfg_set_partition7_low; // [705:674]
    axi_llc_reg2hw_cfg_set_partition7_high_reg_t cfg_set_partition7_high; // [673:642]
    axi_llc_reg2hw_cfg_set_partition8_low_reg_t cfg_set_partition8_low; // [641:610]
    axi_llc_reg2hw_cfg_set_partition8_high_reg_t cfg_set_partition8_high; // [609:578]
    axi_llc_reg2hw_cfg_set_partition9_low_reg_t cfg_set_partition9_low; // [577:546]
    axi_llc_reg2hw_cfg_set_partition9_high_reg_t cfg_set_partition9_high; // [545:514]
    axi_llc_reg2hw_cfg_set_partition10_low_reg_t cfg_set_partition10_low; // [513:482]
    axi_llc_reg2hw_cfg_set_partition10_high_reg_t cfg_set_partition10_high; // [481:450]
    axi_llc_reg2hw_cfg_set_partition11_low_reg_t cfg_set_partition11_low; // [449:418]
    axi_llc_reg2hw_cfg_set_partition11_high_reg_t cfg_set_partition11_high; // [417:386]
    axi_llc_reg2hw_cfg_set_partition12_low_reg_t cfg_set_partition12_low; // [385:354]
    axi_llc_reg2hw_cfg_set_partition12_high_reg_t cfg_set_partition12_high; // [353:322]
    axi_llc_reg2hw_cfg_set_partition13_low_reg_t cfg_set_partition13_low; // [321:290]
    axi_llc_reg2hw_cfg_set_partition13_high_reg_t cfg_set_partition13_high; // [289:258]
    axi_llc_reg2hw_cfg_set_partition14_low_reg_t cfg_set_partition14_low; // [257:226]
    axi_llc_reg2hw_cfg_set_partition14_high_reg_t cfg_set_partition14_high; // [225:194]
    axi_llc_reg2hw_commit_cfg_reg_t commit_cfg; // [193:193]
    axi_llc_reg2hw_commit_partition_cfg_reg_t commit_partition_cfg; // [192:192]
    axi_llc_reg2hw_flushed_low_reg_t flushed_low; // [191:160]
    axi_llc_reg2hw_flushed_high_reg_t flushed_high; // [159:128]
    axi_llc_reg2hw_flushed_set0_low_reg_t flushed_set0_low; // [127:96]
    axi_llc_reg2hw_flushed_set0_high_reg_t flushed_set0_high; // [95:64]
    axi_llc_reg2hw_flushed_set1_low_reg_t flushed_set1_low; // [63:32]
    axi_llc_reg2hw_flushed_set1_high_reg_t flushed_set1_high; // [31:0]
  } axi_llc_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    axi_llc_hw2reg_cfg_spm_low_reg_t cfg_spm_low; // [1785:1753]
    axi_llc_hw2reg_cfg_spm_high_reg_t cfg_spm_high; // [1752:1720]
    axi_llc_hw2reg_cfg_flush_low_reg_t cfg_flush_low; // [1719:1687]
    axi_llc_hw2reg_cfg_flush_high_reg_t cfg_flush_high; // [1686:1654]
    axi_llc_hw2reg_cfg_flush_set0_low_reg_t cfg_flush_set0_low; // [1653:1621]
    axi_llc_hw2reg_cfg_flush_set0_high_reg_t cfg_flush_set0_high; // [1620:1588]
    axi_llc_hw2reg_cfg_flush_set1_low_reg_t cfg_flush_set1_low; // [1587:1555]
    axi_llc_hw2reg_cfg_flush_set1_high_reg_t cfg_flush_set1_high; // [1554:1522]
    axi_llc_hw2reg_cfg_set_partition0_low_reg_t cfg_set_partition0_low; // [1521:1489]
    axi_llc_hw2reg_cfg_set_partition0_high_reg_t cfg_set_partition0_high; // [1488:1456]
    axi_llc_hw2reg_cfg_set_partition1_low_reg_t cfg_set_partition1_low; // [1455:1423]
    axi_llc_hw2reg_cfg_set_partition1_high_reg_t cfg_set_partition1_high; // [1422:1390]
    axi_llc_hw2reg_cfg_set_partition2_low_reg_t cfg_set_partition2_low; // [1389:1357]
    axi_llc_hw2reg_cfg_set_partition2_high_reg_t cfg_set_partition2_high; // [1356:1324]
    axi_llc_hw2reg_cfg_set_partition3_low_reg_t cfg_set_partition3_low; // [1323:1291]
    axi_llc_hw2reg_cfg_set_partition3_high_reg_t cfg_set_partition3_high; // [1290:1258]
    axi_llc_hw2reg_cfg_set_partition4_low_reg_t cfg_set_partition4_low; // [1257:1225]
    axi_llc_hw2reg_cfg_set_partition4_high_reg_t cfg_set_partition4_high; // [1224:1192]
    axi_llc_hw2reg_cfg_set_partition5_low_reg_t cfg_set_partition5_low; // [1191:1159]
    axi_llc_hw2reg_cfg_set_partition5_high_reg_t cfg_set_partition5_high; // [1158:1126]
    axi_llc_hw2reg_cfg_set_partition6_low_reg_t cfg_set_partition6_low; // [1125:1093]
    axi_llc_hw2reg_cfg_set_partition6_high_reg_t cfg_set_partition6_high; // [1092:1060]
    axi_llc_hw2reg_cfg_set_partition7_low_reg_t cfg_set_partition7_low; // [1059:1027]
    axi_llc_hw2reg_cfg_set_partition7_high_reg_t cfg_set_partition7_high; // [1026:994]
    axi_llc_hw2reg_cfg_set_partition8_low_reg_t cfg_set_partition8_low; // [993:961]
    axi_llc_hw2reg_cfg_set_partition8_high_reg_t cfg_set_partition8_high; // [960:928]
    axi_llc_hw2reg_cfg_set_partition9_low_reg_t cfg_set_partition9_low; // [927:895]
    axi_llc_hw2reg_cfg_set_partition9_high_reg_t cfg_set_partition9_high; // [894:862]
    axi_llc_hw2reg_cfg_set_partition10_low_reg_t cfg_set_partition10_low; // [861:829]
    axi_llc_hw2reg_cfg_set_partition10_high_reg_t cfg_set_partition10_high; // [828:796]
    axi_llc_hw2reg_cfg_set_partition11_low_reg_t cfg_set_partition11_low; // [795:763]
    axi_llc_hw2reg_cfg_set_partition11_high_reg_t cfg_set_partition11_high; // [762:730]
    axi_llc_hw2reg_cfg_set_partition12_low_reg_t cfg_set_partition12_low; // [729:697]
    axi_llc_hw2reg_cfg_set_partition12_high_reg_t cfg_set_partition12_high; // [696:664]
    axi_llc_hw2reg_cfg_set_partition13_low_reg_t cfg_set_partition13_low; // [663:631]
    axi_llc_hw2reg_cfg_set_partition13_high_reg_t cfg_set_partition13_high; // [630:598]
    axi_llc_hw2reg_cfg_set_partition14_low_reg_t cfg_set_partition14_low; // [597:565]
    axi_llc_hw2reg_cfg_set_partition14_high_reg_t cfg_set_partition14_high; // [564:532]
    axi_llc_hw2reg_commit_cfg_reg_t commit_cfg; // [531:530]
    axi_llc_hw2reg_commit_partition_cfg_reg_t commit_partition_cfg; // [529:528]
    axi_llc_hw2reg_flushed_low_reg_t flushed_low; // [527:495]
    axi_llc_hw2reg_flushed_high_reg_t flushed_high; // [494:462]
    axi_llc_hw2reg_bist_out_low_reg_t bist_out_low; // [461:429]
    axi_llc_hw2reg_bist_out_high_reg_t bist_out_high; // [428:396]
    axi_llc_hw2reg_set_asso_low_reg_t set_asso_low; // [395:363]
    axi_llc_hw2reg_set_asso_high_reg_t set_asso_high; // [362:330]
    axi_llc_hw2reg_num_lines_low_reg_t num_lines_low; // [329:297]
    axi_llc_hw2reg_num_lines_high_reg_t num_lines_high; // [296:264]
    axi_llc_hw2reg_num_blocks_low_reg_t num_blocks_low; // [263:231]
    axi_llc_hw2reg_num_blocks_high_reg_t num_blocks_high; // [230:198]
    axi_llc_hw2reg_version_low_reg_t version_low; // [197:165]
    axi_llc_hw2reg_version_high_reg_t version_high; // [164:132]
    axi_llc_hw2reg_flushed_set0_low_reg_t flushed_set0_low; // [131:99]
    axi_llc_hw2reg_flushed_set0_high_reg_t flushed_set0_high; // [98:66]
    axi_llc_hw2reg_flushed_set1_low_reg_t flushed_set1_low; // [65:33]
    axi_llc_hw2reg_flushed_set1_high_reg_t flushed_set1_high; // [32:0]
  } axi_llc_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SPM_LOW_OFFSET = 8'h 0;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SPM_HIGH_OFFSET = 8'h 4;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_LOW_OFFSET = 8'h 8;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_HIGH_OFFSET = 8'h c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_SET0_LOW_OFFSET = 8'h 10;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_SET0_HIGH_OFFSET = 8'h 14;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_SET1_LOW_OFFSET = 8'h 18;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_FLUSH_SET1_HIGH_OFFSET = 8'h 1c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION0_LOW_OFFSET = 8'h 20;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION0_HIGH_OFFSET = 8'h 24;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION1_LOW_OFFSET = 8'h 28;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION1_HIGH_OFFSET = 8'h 2c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION2_LOW_OFFSET = 8'h 30;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION2_HIGH_OFFSET = 8'h 34;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION3_LOW_OFFSET = 8'h 38;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION3_HIGH_OFFSET = 8'h 3c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION4_LOW_OFFSET = 8'h 40;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION4_HIGH_OFFSET = 8'h 44;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION5_LOW_OFFSET = 8'h 48;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION5_HIGH_OFFSET = 8'h 4c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION6_LOW_OFFSET = 8'h 50;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION6_HIGH_OFFSET = 8'h 54;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION7_LOW_OFFSET = 8'h 58;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION7_HIGH_OFFSET = 8'h 5c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION8_LOW_OFFSET = 8'h 60;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION8_HIGH_OFFSET = 8'h 64;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION9_LOW_OFFSET = 8'h 68;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION9_HIGH_OFFSET = 8'h 6c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION10_LOW_OFFSET = 8'h 70;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION10_HIGH_OFFSET = 8'h 74;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION11_LOW_OFFSET = 8'h 78;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION11_HIGH_OFFSET = 8'h 7c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION12_LOW_OFFSET = 8'h 80;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION12_HIGH_OFFSET = 8'h 84;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION13_LOW_OFFSET = 8'h 88;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION13_HIGH_OFFSET = 8'h 8c;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION14_LOW_OFFSET = 8'h 90;
  parameter logic [BlockAw-1:0] AXI_LLC_CFG_SET_PARTITION14_HIGH_OFFSET = 8'h 94;
  parameter logic [BlockAw-1:0] AXI_LLC_COMMIT_CFG_OFFSET = 8'h 98;
  parameter logic [BlockAw-1:0] AXI_LLC_COMMIT_PARTITION_CFG_OFFSET = 8'h a0;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_LOW_OFFSET = 8'h a8;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_HIGH_OFFSET = 8'h ac;
  parameter logic [BlockAw-1:0] AXI_LLC_BIST_OUT_LOW_OFFSET = 8'h b0;
  parameter logic [BlockAw-1:0] AXI_LLC_BIST_OUT_HIGH_OFFSET = 8'h b4;
  parameter logic [BlockAw-1:0] AXI_LLC_SET_ASSO_LOW_OFFSET = 8'h b8;
  parameter logic [BlockAw-1:0] AXI_LLC_SET_ASSO_HIGH_OFFSET = 8'h bc;
  parameter logic [BlockAw-1:0] AXI_LLC_NUM_LINES_LOW_OFFSET = 8'h c0;
  parameter logic [BlockAw-1:0] AXI_LLC_NUM_LINES_HIGH_OFFSET = 8'h c4;
  parameter logic [BlockAw-1:0] AXI_LLC_NUM_BLOCKS_LOW_OFFSET = 8'h c8;
  parameter logic [BlockAw-1:0] AXI_LLC_NUM_BLOCKS_HIGH_OFFSET = 8'h cc;
  parameter logic [BlockAw-1:0] AXI_LLC_VERSION_LOW_OFFSET = 8'h d0;
  parameter logic [BlockAw-1:0] AXI_LLC_VERSION_HIGH_OFFSET = 8'h d4;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_SET0_LOW_OFFSET = 8'h d8;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_SET0_HIGH_OFFSET = 8'h dc;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_SET1_LOW_OFFSET = 8'h e0;
  parameter logic [BlockAw-1:0] AXI_LLC_FLUSHED_SET1_HIGH_OFFSET = 8'h e4;

  // Register index
  typedef enum int {
    AXI_LLC_CFG_SPM_LOW,
    AXI_LLC_CFG_SPM_HIGH,
    AXI_LLC_CFG_FLUSH_LOW,
    AXI_LLC_CFG_FLUSH_HIGH,
    AXI_LLC_CFG_FLUSH_SET0_LOW,
    AXI_LLC_CFG_FLUSH_SET0_HIGH,
    AXI_LLC_CFG_FLUSH_SET1_LOW,
    AXI_LLC_CFG_FLUSH_SET1_HIGH,
    AXI_LLC_CFG_SET_PARTITION0_LOW,
    AXI_LLC_CFG_SET_PARTITION0_HIGH,
    AXI_LLC_CFG_SET_PARTITION1_LOW,
    AXI_LLC_CFG_SET_PARTITION1_HIGH,
    AXI_LLC_CFG_SET_PARTITION2_LOW,
    AXI_LLC_CFG_SET_PARTITION2_HIGH,
    AXI_LLC_CFG_SET_PARTITION3_LOW,
    AXI_LLC_CFG_SET_PARTITION3_HIGH,
    AXI_LLC_CFG_SET_PARTITION4_LOW,
    AXI_LLC_CFG_SET_PARTITION4_HIGH,
    AXI_LLC_CFG_SET_PARTITION5_LOW,
    AXI_LLC_CFG_SET_PARTITION5_HIGH,
    AXI_LLC_CFG_SET_PARTITION6_LOW,
    AXI_LLC_CFG_SET_PARTITION6_HIGH,
    AXI_LLC_CFG_SET_PARTITION7_LOW,
    AXI_LLC_CFG_SET_PARTITION7_HIGH,
    AXI_LLC_CFG_SET_PARTITION8_LOW,
    AXI_LLC_CFG_SET_PARTITION8_HIGH,
    AXI_LLC_CFG_SET_PARTITION9_LOW,
    AXI_LLC_CFG_SET_PARTITION9_HIGH,
    AXI_LLC_CFG_SET_PARTITION10_LOW,
    AXI_LLC_CFG_SET_PARTITION10_HIGH,
    AXI_LLC_CFG_SET_PARTITION11_LOW,
    AXI_LLC_CFG_SET_PARTITION11_HIGH,
    AXI_LLC_CFG_SET_PARTITION12_LOW,
    AXI_LLC_CFG_SET_PARTITION12_HIGH,
    AXI_LLC_CFG_SET_PARTITION13_LOW,
    AXI_LLC_CFG_SET_PARTITION13_HIGH,
    AXI_LLC_CFG_SET_PARTITION14_LOW,
    AXI_LLC_CFG_SET_PARTITION14_HIGH,
    AXI_LLC_COMMIT_CFG,
    AXI_LLC_COMMIT_PARTITION_CFG,
    AXI_LLC_FLUSHED_LOW,
    AXI_LLC_FLUSHED_HIGH,
    AXI_LLC_BIST_OUT_LOW,
    AXI_LLC_BIST_OUT_HIGH,
    AXI_LLC_SET_ASSO_LOW,
    AXI_LLC_SET_ASSO_HIGH,
    AXI_LLC_NUM_LINES_LOW,
    AXI_LLC_NUM_LINES_HIGH,
    AXI_LLC_NUM_BLOCKS_LOW,
    AXI_LLC_NUM_BLOCKS_HIGH,
    AXI_LLC_VERSION_LOW,
    AXI_LLC_VERSION_HIGH,
    AXI_LLC_FLUSHED_SET0_LOW,
    AXI_LLC_FLUSHED_SET0_HIGH,
    AXI_LLC_FLUSHED_SET1_LOW,
    AXI_LLC_FLUSHED_SET1_HIGH
  } axi_llc_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] AXI_LLC_PERMIT [56] = '{
    4'b 1111, // index[ 0] AXI_LLC_CFG_SPM_LOW
    4'b 1111, // index[ 1] AXI_LLC_CFG_SPM_HIGH
    4'b 1111, // index[ 2] AXI_LLC_CFG_FLUSH_LOW
    4'b 1111, // index[ 3] AXI_LLC_CFG_FLUSH_HIGH
    4'b 1111, // index[ 4] AXI_LLC_CFG_FLUSH_SET0_LOW
    4'b 1111, // index[ 5] AXI_LLC_CFG_FLUSH_SET0_HIGH
    4'b 1111, // index[ 6] AXI_LLC_CFG_FLUSH_SET1_LOW
    4'b 1111, // index[ 7] AXI_LLC_CFG_FLUSH_SET1_HIGH
    4'b 1111, // index[ 8] AXI_LLC_CFG_SET_PARTITION0_LOW
    4'b 1111, // index[ 9] AXI_LLC_CFG_SET_PARTITION0_HIGH
    4'b 1111, // index[10] AXI_LLC_CFG_SET_PARTITION1_LOW
    4'b 1111, // index[11] AXI_LLC_CFG_SET_PARTITION1_HIGH
    4'b 1111, // index[12] AXI_LLC_CFG_SET_PARTITION2_LOW
    4'b 1111, // index[13] AXI_LLC_CFG_SET_PARTITION2_HIGH
    4'b 1111, // index[14] AXI_LLC_CFG_SET_PARTITION3_LOW
    4'b 1111, // index[15] AXI_LLC_CFG_SET_PARTITION3_HIGH
    4'b 1111, // index[16] AXI_LLC_CFG_SET_PARTITION4_LOW
    4'b 1111, // index[17] AXI_LLC_CFG_SET_PARTITION4_HIGH
    4'b 1111, // index[18] AXI_LLC_CFG_SET_PARTITION5_LOW
    4'b 1111, // index[19] AXI_LLC_CFG_SET_PARTITION5_HIGH
    4'b 1111, // index[20] AXI_LLC_CFG_SET_PARTITION6_LOW
    4'b 1111, // index[21] AXI_LLC_CFG_SET_PARTITION6_HIGH
    4'b 1111, // index[22] AXI_LLC_CFG_SET_PARTITION7_LOW
    4'b 1111, // index[23] AXI_LLC_CFG_SET_PARTITION7_HIGH
    4'b 1111, // index[24] AXI_LLC_CFG_SET_PARTITION8_LOW
    4'b 1111, // index[25] AXI_LLC_CFG_SET_PARTITION8_HIGH
    4'b 1111, // index[26] AXI_LLC_CFG_SET_PARTITION9_LOW
    4'b 1111, // index[27] AXI_LLC_CFG_SET_PARTITION9_HIGH
    4'b 1111, // index[28] AXI_LLC_CFG_SET_PARTITION10_LOW
    4'b 1111, // index[29] AXI_LLC_CFG_SET_PARTITION10_HIGH
    4'b 1111, // index[30] AXI_LLC_CFG_SET_PARTITION11_LOW
    4'b 1111, // index[31] AXI_LLC_CFG_SET_PARTITION11_HIGH
    4'b 1111, // index[32] AXI_LLC_CFG_SET_PARTITION12_LOW
    4'b 1111, // index[33] AXI_LLC_CFG_SET_PARTITION12_HIGH
    4'b 1111, // index[34] AXI_LLC_CFG_SET_PARTITION13_LOW
    4'b 1111, // index[35] AXI_LLC_CFG_SET_PARTITION13_HIGH
    4'b 1111, // index[36] AXI_LLC_CFG_SET_PARTITION14_LOW
    4'b 1111, // index[37] AXI_LLC_CFG_SET_PARTITION14_HIGH
    4'b 0001, // index[38] AXI_LLC_COMMIT_CFG
    4'b 0001, // index[39] AXI_LLC_COMMIT_PARTITION_CFG
    4'b 1111, // index[40] AXI_LLC_FLUSHED_LOW
    4'b 1111, // index[41] AXI_LLC_FLUSHED_HIGH
    4'b 1111, // index[42] AXI_LLC_BIST_OUT_LOW
    4'b 1111, // index[43] AXI_LLC_BIST_OUT_HIGH
    4'b 1111, // index[44] AXI_LLC_SET_ASSO_LOW
    4'b 1111, // index[45] AXI_LLC_SET_ASSO_HIGH
    4'b 1111, // index[46] AXI_LLC_NUM_LINES_LOW
    4'b 1111, // index[47] AXI_LLC_NUM_LINES_HIGH
    4'b 1111, // index[48] AXI_LLC_NUM_BLOCKS_LOW
    4'b 1111, // index[49] AXI_LLC_NUM_BLOCKS_HIGH
    4'b 1111, // index[50] AXI_LLC_VERSION_LOW
    4'b 1111, // index[51] AXI_LLC_VERSION_HIGH
    4'b 1111, // index[52] AXI_LLC_FLUSHED_SET0_LOW
    4'b 1111, // index[53] AXI_LLC_FLUSHED_SET0_HIGH
    4'b 1111, // index[54] AXI_LLC_FLUSHED_SET1_LOW
    4'b 1111  // index[55] AXI_LLC_FLUSHED_SET1_HIGH
  };

endpackage

